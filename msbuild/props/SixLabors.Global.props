<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!--
    Directory.Build.props is automatically picked up and imported by
    Microsoft.Common.props. This file needs to exist, even if empty so that
    files in the parent directory tree, with the same name, are not imported
    instead. They import fairly early and only Sdk.props will have been imported
    beforehand. We also don't need to add ourselves to MSBuildAllProjects, as
    that is done by the file that imports us.
  -->

  <!-- 
    Define Environmental conditionals. Determined by environmental settings set in build-and-test.yml 
    These properties are defined 2X to ensure both MSBuild and Visual Studio (preprocessor directives)
    can correctly detect them.
    -->
  <PropertyGroup>
    <IsContinuousIntegration Condition="'$(CI)' == 'true'">true</IsContinuousIntegration>
    <IsCodeCoverage Condition="'$(codecov)' == 'true'">true</IsCodeCoverage>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsContinuousIntegration)'=='true'">
    <DefineConstants>$(DefineConstants);ENV_CI</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsCodeCoverage)'=='true'">
    <DefineConstants>$(DefineConstants);ENV_CODECOV</DefineConstants>
  </PropertyGroup>

  <!--Define OS platform conditions and constants.
   https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2019#msbuild-property-functions
   https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.osplatform?view=net-5.0#properties
   -->
  <PropertyGroup>
    <IsWindows Condition="$([MSBuild]::IsOSPlatform('Windows'))">true</IsWindows>
    <IsOSX Condition="$([MSBuild]::IsOSPlatform('OSX'))">true</IsOSX>
    <IsLinux Condition="$([MSBuild]::IsOSPlatform('Linux'))">true</IsLinux>
    <IsFreeBSD Condition="$([MSBuild]::IsOSPlatform('FreeBSD'))">true</IsFreeBSD>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(IsWindows)'=='true'">
      <PropertyGroup>
        <DefineConstants>$(DefineConstants);OS_WINDOWS</DefineConstants>
      </PropertyGroup>
    </When>
    <When Condition="'$(IsOSX)'=='true'">
      <PropertyGroup>
        <DefineConstants>$(DefineConstants);OS_OSX</DefineConstants>
      </PropertyGroup>
    </When>
    <When Condition="'$(IsLinux)'=='true'">
      <PropertyGroup>
        <DefineConstants>$(DefineConstants);OS_LINUX</DefineConstants>
      </PropertyGroup>
    </When>
    <When Condition="'$(IsFreeBSD)'=='true'">
      <PropertyGroup>
        <DefineConstants>$(DefineConstants);OS_FREEBSD</DefineConstants>
      </PropertyGroup>
    </When>
  </Choose>

  <!-- Compilation settings that explicitly differ from the Sdk.props/targets defaults  -->
  <PropertyGroup>
    <LangVersion>10.0</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Features>strict;IOperation</Features>
    <HighEntropyVA>true</HighEntropyVA>
    <NeutralLanguage>en</NeutralLanguage>
    <OverwriteReadOnlyFiles>true</OverwriteReadOnlyFiles>
    <DebugType>portable</DebugType>
    <DebugType Condition="'$(IsCodeCoverage)'=='true'">full</DebugType>
    <NullableContextOptions>disable</NullableContextOptions>
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
    <ImplicitUsings>true</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup Condition="'$(ImplicitUsings)'=='true'">
    <Using Include="SixLabors" />
  </ItemGroup>

  <!-- Required restore feeds. -->
  <PropertyGroup>
    <RestoreSources>
      $(RestoreSources);
      https://api.nuget.org/v3/index.json;
      https://www.myget.org/F/sixlabors/api/v3/index.json;
      https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json;
    </RestoreSources>
  </PropertyGroup>

  <!-- Standardize build output location. -->
  <PropertyGroup>
    <BaseArtifactsPath>$(SixLaborsSolutionDirectory)artifacts/</BaseArtifactsPath>
    <BaseArtifactsPathSuffix>$(SixLaborsProjectCategory)/$(MSBuildProjectName)</BaseArtifactsPathSuffix>
    <BaseIntermediateOutputPath>$(BaseArtifactsPath)obj/$(BaseArtifactsPathSuffix)/</BaseIntermediateOutputPath>
    <BaseOutputPath>$(BaseArtifactsPath)bin/$(BaseArtifactsPathSuffix)/</BaseOutputPath>
    <PackageOutputPath>$(BaseArtifactsPath)pkg/$(BaseArtifactsPathSuffix)/$(Configuration)/</PackageOutputPath>
  </PropertyGroup>

  <!-- Ensure deterministic builds work when triggered against individual projects. -->
  <!-- https://github.com/dotnet/roslyn/issues/37379#issuecomment-513371985 -->
  <ItemGroup Condition="'$(IsContinuousIntegration)'=='true'">
    <SourceRoot Include="$(MSBuildThisFileDirectory)/"/>
  </ItemGroup>

  <!-- Public key definition for signing assemblies. -->
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)..\..\SixLabors.snk</AssemblyOriginatorKeyFile>
    <SixLaborsPublicKey>00240000048000009400000006020000002400005253413100040000010001000147e6fe6766715eec6cfed61f1e7dcdbf69748a3e355c67e9d8dfd953acab1d5e012ba34b23308166fdc61ee1d0390d5f36d814a6091dd4b5ed9eda5a26afced924c683b4bfb4b3d64b0586a57eff9f02b1f84e3cb0ddd518bd1697f2c84dcbb97eb8bb5c7801be12112ed0ec86db934b0e9a5171e6bb1384b6d2f7d54dfa97</SixLaborsPublicKey>
    <UseSharedCompilation>true</UseSharedCompilation>
  </PropertyGroup>

  <!-- Package references and additional files which are consumed by all projects. -->
  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.435" IsImplicitlyDefined="true">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)..\..\stylecop.json" />
  </ItemGroup>

</Project>
